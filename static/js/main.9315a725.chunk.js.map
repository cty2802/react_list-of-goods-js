{"version":3,"sources":["App.jsx","index.jsx"],"names":["SORT_FIELDS","goodsFromServer","App","useState","sortField","setSortField","isReversed","setIsReversed","isResetButtonVisible","visibleGoods","goods","preparedGoods","sort","a","b","localeCompare","reverse","getPreparedGoods","name","length","className","cn","onClick","type","undefined","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMMA,EACI,SADJA,EAEE,OAGKC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA4BK,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAAuBJ,GAAaE,EACpCG,EA7BR,SAA0BC,EAA1B,GAA6D,IAA1BN,EAAyB,EAAzBA,UAAWE,EAAc,EAAdA,WACtCK,EAAa,YAAOD,GAqB1B,OAnBIN,GACFO,EAAcC,MAAK,SAACC,EAAGC,GACrB,OAAQV,GACN,KAAKJ,EACH,OAAOa,EAAET,GAAaU,EAAEV,GAE1B,KAAKJ,EACH,OAAOa,EAAEE,cAAcD,GAEzB,QACE,OAAO,MAKXR,GACFK,EAAcK,UAGTL,EAQHM,CAAiBhB,EAAiB,CAAEG,YAAWE,eAGjDY,EAEElB,EADFmB,EACEnB,EAOJ,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEA,UAAWC,IACT,iBACA,CAAE,WAAYjB,IAAcc,IAE9BI,QAAS,kBAAMjB,EAAaa,IAC5BK,KAAK,SANP,iCAWA,wBACEH,UAAWC,IACT,oBACA,CAAE,WAAYjB,IAAce,IAE9BG,QAAS,kBAAMjB,EAAac,IAC5BI,KAAK,SANP,4BAWA,wBACEH,UAAWC,IACT,oBACA,CAAE,YAAaf,IAEjBgB,QAAS,kBAAMf,GAAeD,IAC9BiB,KAAK,SANP,qBAWCf,GACC,wBACEe,KAAK,SACLH,UAAU,4BACVE,QAAS,WA5CjBjB,EAAa,IACbE,OAAciB,IAwCR,sBAYJ,6BACGf,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCpHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9315a725.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nconst SORT_FIELDS = {\n  length: 'length',\n  name: 'name',\n};\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getPreparedGoods(goods, { sortField, isReversed }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((a, b) => {\n      switch (sortField) {\n        case SORT_FIELDS.length:\n          return a[sortField] - b[sortField];\n\n        case SORT_FIELDS.name:\n          return a.localeCompare(b);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const isResetButtonVisible = sortField || isReversed;\n  const visibleGoods\n    = getPreparedGoods(goodsFromServer, { sortField, isReversed });\n\n  const {\n    name,\n    length,\n  } = SORT_FIELDS;\n\n  function setSortReverse() {\n    setSortField('');\n    setIsReversed(undefined);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          className={cn(\n            'button is-info',\n            { 'is-light': sortField !== name },\n          )}\n          onClick={() => setSortField(name)}\n          type=\"button\"\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          className={cn(\n            'button is-success',\n            { 'is-light': sortField !== length },\n          )}\n          onClick={() => setSortField(length)}\n          type=\"button\"\n        >\n          Sort by length\n        </button>\n\n        <button\n          className={cn(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => setIsReversed(!isReversed)}\n          type=\"button\"\n        >\n          Reverse\n        </button>\n\n        {isResetButtonVisible && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortReverse();\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}